SDCC Keyboard MSX ROM Functions Library (object type)
Version: 1.0
Date: 7/03/2016
Author: mvac7/303bcn
Architecture: MSX
Format: C Object (SDCC .rel)
Programming language: C
WEB: 
mail: mvac7303b@gmail.com

Doc version: 1.1 (18/06/2019) 


History of versions:
- v1.0 (7/3/2016)<


Document changes:
- v1.1 (18/06/2019) Added Bit definitions (from header)  
- v1.0 (25/06/2018) Initial version.


--------------------------------------------------------------------------------
Index:

1 Introduction
2 Acknowledgments.
3 Requirements
4 Constants
  4.1 Bit values
5 Functions
  5.1 KillBuffer
  5.2 INKEY
  5.3 GetKeyMatrix(line)
6 Keyboard Matrix
  6.1 International                       



--------------------------------------------------------------------------------
1. Introduction:

This project is an Open Source library with basic functions for reading the 
keyboard of MSX computers.

It uses the functions from the MSX BIOS, so it is designed to create 
applications in ROM format.

Use them for developing MSX applications using Small Device C Compiler (SDCC).
  
Includes an application for test and learning purposes.  
  


--------------------------------------------------------------------------------
2. Acknowledgments
  
  Thanks for Info & help, to:

  Avelino Herrera > http://msx.atlantes.org/index_es.html
  Nerlaska > http://albertodehoyonebot.blogspot.com.es
  Fubu > http://www.gamerachan.org/fubu/
  Marq/Lieves!Tuore > http://www.kameli.net/lt/
  Sapphire/Z80ST > http://z80st.auic.es/
  Pentacour > http://pentacour.com/
  JamQue/TPM > http://www.thepetsmode.com/
  Andrear > http://andrear.altervista.org/home/msxsoftware.php
  Konamiman > https://www.konamiman.com
  MSX Assembly Page > http://map.grauw.nl/resources/msxbios.php
  Portar MSX Tech Doc > http://nocash.emubase.de/portar.htm
  MSX Resource Center > http://www.msx.org/
  Karoshi MSX Community > http://karoshi.auic.es/
  BlueMSX >> http://www.bluemsx.com/
  OpenMSX >> http://openmsx.sourceforge.net/
  Meisei  >> ?



--------------------------------------------------------------------------------
3. Requirements:

 * Small Device C Compiler (SDCC) v3.6 
   http://sdcc.sourceforge.net/
     
 * Hex2bin v2.2 
   http://hex2bin.sourceforge.net/



--------------------------------------------------------------------------------
4 Constants

4.1 Bit values

You can use it to check the key pressed with the GetKeyMatrix function.
  
* Bit0 = 1
* Bit1 = 2
* Bit2 = 4
* Bit3 = 8
* Bit4 = 16
* Bit5 = 32
* Bit6 = 64
* Bit7 = 128

--------------------------------------------------------------------------------
5 Functions


================================================================================
5.1 KillBuffer

 Function : Clear keyboard buffer
 Input    : -
 Output   : -
 Examples : 

            KillBuffer();



================================================================================
5.2 INKEY 

 Function : One character input (waiting) and return its code.
 Input    : -
 Output   : [char] key code
 Examples :              

            char byteValue;
            byteValue = INKEY();
            if (byteValue==13) pressReturnKey();

            
================================================================================
5.3 GetKeyMatrix(line)

 Function : Returns the value of the specified line from the keyboard matrix.
            Each line provides the status of 8 keys.
            To know which keys correspond, you will need documentation that 
            includes a keyboard table.
 Input    : [char] line 
 Output   : [char] state of the keys. 1 = not pressed; 0 = pressed
 Examples : 
 
            char keyPressed;
            keyPressed = GetKeyMatrix(7); 
            if (!(keyPressed & Bit2)) exit(); //ESC Key
            
                        
--------------------------------------------------------------------------------
6 Keyboard Matrix

  Info by MSX Assembly Page
  http://map.grauw.nl/articles/keymatrix.php



6.1 International
  
bit  7     6     5     4     3     2     1     0
----------------------------------------------------
  0  7 &   6 ^   5 %   4 $   3 #   2 @   1 !   0 )
  1  ; :   ] }   [ {   \ |   = +   - _   9 (   8 *
  2  B     A     acent / ?   . >   , <   `     ' "
  3  J     I     H     G     F     E     D     C
  4  R     Q     P     O     N     M     L     K
  5  Z     Y     X     W     V     U     T     S
  6  F3    F2    F1    CODE  CAPS  GRAPH CTRL  SHIFT
  7  RET   SEL   BS    STOP  TAB   ESC   F5    F4
  8  Right Down  Up    Left  DEL   INS   HOME  SPACE
  9  NUM4  NUM3  NUM2  NUM1  NUM0  NUM/  NUM+  NUM*
 10  NUM.  NUM,  NUM-  NUM9  NUM8  NUM7  NUM6  NUM5
